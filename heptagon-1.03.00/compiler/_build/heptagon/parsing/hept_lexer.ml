# 31 "heptagon/parsing/hept_lexer.mll"
 
open Lexing
open Location
open Hept_parser
open Compiler_utils

exception Lexical_error of lexical_error * location;;

let comment_depth = ref 0

let keyword_table = ((Hashtbl.create 149) : (string, token) Hashtbl.t);;

List.iter (fun (str,tok) -> Hashtbl.add keyword_table str tok) [
 "node", NODE;
 "fun", FUN;
 "returns", RETURNS;
 "var", VAR;
 "val", VAL;
 "const", CONST;
 "let", LET;
 "tel", TEL;
 "end", END;
 "fby", FBY;
 "switch", SWITCH;
 "type", TYPE;
 "every", EVERY;
 "true", BOOL(true);
 "false", BOOL(false);
 "pre", PRE;
 "or", OR;
 "not", NOT;
 "open", OPEN;
 "automaton", AUTOMATON;
 "switch", SWITCH;
 "present", PRESENT;
 "reset", RESET;
 "state", STATE;
 "unless", UNLESS;
 "until", UNTIL;
 "last", LAST;
 "if", IF;
 "then", THEN;
 "else", ELSE;
 "default", DEFAULT;
 "continue", CONTINUE;
 "do", DO;
 "done", DONE;
 "in", IN;
 "contract", CONTRACT;
 "assume", ASSUME;
 "enforce", ENFORCE;
 "reachable", REACHABLE;
 "attractive", ATTRACTIVE;
 "with", WITH;
 "inlined",INLINED;
 "when", WHEN;
 "whenot", WHENOT;
 "merge", MERGE;
 "on", ON;
 "onot", ONOT;
 "map", MAP;
 "mapi", MAPI;
 "fold", FOLD;
 "foldi", FOLDI;
 "mapfold", MAPFOLD;
 "at", AT;
 "init", INIT;
 "split", SPLIT;
 "reinit", REINIT;
 "unsafe", UNSAFE;
 "external", EXTERNAL;
 "quo", INFIX3("quo");
 "mod", INFIX3("mod");
 "land", INFIX3("land");
 "lor", INFIX2("lor");
 "xor", INFIX2("xor");
 "lsl", INFIX4("lsl");
 "lsr", INFIX4("lsr");
 "asr", INFIX4("asr")
]


(* To buffer string literals *)

let initial_string_buffer = String.create 256
let string_buff = ref initial_string_buffer
let string_index = ref 0

let reset_string_buffer () =
  string_buff := initial_string_buffer;
  string_index := 0;
  ()


let store_string_char c =
  if !string_index >= String.length (!string_buff) then begin
    let new_buff = String.create (String.length (!string_buff) * 2) in
      String.blit (!string_buff) 0 new_buff 0 (String.length (!string_buff));
      string_buff := new_buff
  end;
  String.set (!string_buff) (!string_index) c;
  incr string_index


let get_stored_string () =
  let s = String.sub (!string_buff) 0 (!string_index) in
    string_buff := initial_string_buffer;
    s

let char_for_backslash = function
    'n' -> '\010'
  | 'r' -> '\013'
  | 'b' -> '\008'
  | 't' -> '\009'
  | c   -> c

let char_for_decimal_code lexbuf i =
  let c =
    100 * (int_of_char(Lexing.lexeme_char lexbuf i) - 48) +
     10 * (int_of_char(Lexing.lexeme_char lexbuf (i+1)) - 48) +
          (int_of_char(Lexing.lexeme_char lexbuf (i+2)) - 48) in
  char_of_int(c land 0xFF)


# 127 "heptagon/parsing/hept_lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\207\255\208\255\094\000\129\000\164\000\199\000\217\255\
    \218\000\248\000\065\001\149\001\239\001\018\002\229\255\030\000\
    \053\002\088\002\236\255\123\002\158\002\193\002\243\255\037\000\
    \246\255\247\255\228\002\034\000\007\003\086\000\083\000\003\000\
    \001\000\255\255\087\000\222\255\070\000\007\000\037\003\121\003\
    \205\003\039\004\227\255\074\004\251\255\249\255\109\004\244\255\
    \144\004\179\004\214\004\249\004\028\005\063\005\228\255\098\005\
    \128\005\212\005\029\003\094\000\111\000\129\000\031\006\054\006\
    \228\000\115\000\239\001\018\002\039\004\042\001\251\255\252\255\
    \093\000\096\000\004\000\255\255\254\255\112\000\253\255\049\001\
    \246\255\247\255\129\000\252\255\120\000\127\000\005\000\255\255\
    \254\255\253\255\086\006\131\000\251\255\250\255\074\004\134\000\
    \249\255\109\006\146\000\248\255\175\004\249\255\250\255\137\006\
    \254\255\006\000\255\255\155\006\252\255\185\000\187\000\165\006\
    \251\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\046\000\044\000\042\000\041\000\255\255\
    \036\000\036\000\035\000\034\000\042\000\029\000\255\255\025\000\
    \024\000\022\000\255\255\021\000\016\000\013\000\255\255\010\000\
    \255\255\255\255\007\000\005\000\042\000\003\000\002\000\001\000\
    \048\000\255\255\030\000\255\255\040\000\255\255\255\255\039\000\
    \255\255\031\000\255\255\015\000\255\255\255\255\045\000\255\255\
    \014\000\017\000\018\000\023\000\020\000\043\000\255\255\032\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\036\000\
    \036\000\036\000\037\000\037\000\255\255\255\255\255\255\255\255\
    \004\000\004\000\004\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\009\000\255\255\009\000\009\000\009\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\006\000\
    \255\255\006\000\255\255\255\255\255\255\002\000\002\000\255\255\
    \255\255";
  Lexing.lex_default = 
   "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\000\000\255\255\
    \000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\000\000\000\000\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\070\000\000\000\000\000\
    \255\255\255\255\255\255\000\000\000\000\255\255\000\000\080\000\
    \000\000\000\000\091\000\000\000\255\255\255\255\255\255\000\000\
    \000\000\000\000\255\255\255\255\000\000\000\000\255\255\255\255\
    \000\000\255\255\255\255\000\000\101\000\000\000\000\000\255\255\
    \000\000\255\255\000\000\255\255\000\000\255\255\255\255\255\255\
    \000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\031\000\033\000\033\000\031\000\032\000\075\000\087\000\
    \106\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \031\000\006\000\007\000\031\000\005\000\003\000\020\000\038\000\
    \029\000\027\000\026\000\004\000\018\000\017\000\030\000\003\000\
    \009\000\008\000\008\000\008\000\008\000\008\000\008\000\008\000\
    \008\000\008\000\023\000\022\000\028\000\021\000\012\000\006\000\
    \013\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\015\000\054\000\014\000\016\000\047\000\
    \045\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\025\000\019\000\024\000\006\000\003\000\
    \036\000\034\000\003\000\003\000\003\000\035\000\037\000\077\000\
    \003\000\003\000\076\000\003\000\003\000\003\000\066\000\066\000\
    \066\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
    \003\000\078\000\003\000\003\000\003\000\003\000\003\000\065\000\
    \065\000\089\000\004\000\065\000\065\000\004\000\004\000\004\000\
    \092\000\088\000\093\000\004\000\004\000\096\000\004\000\004\000\
    \004\000\064\000\064\000\064\000\064\000\064\000\064\000\064\000\
    \064\000\099\000\000\000\004\000\003\000\004\000\004\000\004\000\
    \004\000\004\000\110\000\110\000\110\000\005\000\000\000\000\000\
    \005\000\005\000\005\000\000\000\000\000\000\000\005\000\005\000\
    \000\000\005\000\005\000\005\000\000\000\000\000\000\000\000\000\
    \000\000\110\000\003\000\110\000\003\000\090\000\005\000\004\000\
    \005\000\005\000\005\000\005\000\005\000\000\000\000\000\000\000\
    \006\000\000\000\000\000\006\000\006\000\006\000\000\000\000\000\
    \000\000\006\000\006\000\000\000\006\000\006\000\006\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\004\000\000\000\004\000\
    \002\000\006\000\005\000\006\000\006\000\006\000\006\000\006\000\
    \059\000\000\000\008\000\008\000\008\000\008\000\008\000\008\000\
    \008\000\008\000\008\000\008\000\064\000\064\000\064\000\064\000\
    \064\000\064\000\064\000\064\000\000\000\000\000\000\000\058\000\
    \005\000\000\000\005\000\000\000\000\000\006\000\059\000\000\000\
    \008\000\008\000\008\000\008\000\008\000\008\000\008\000\008\000\
    \008\000\008\000\000\000\000\000\075\000\000\000\000\000\074\000\
    \000\000\000\000\060\000\087\000\000\000\058\000\086\000\058\000\
    \000\000\000\000\000\000\006\000\000\000\006\000\000\000\061\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \062\000\000\000\073\000\083\000\000\000\000\000\000\000\000\000\
    \082\000\085\000\060\000\084\000\000\000\058\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\061\000\
    \010\000\000\000\072\000\000\000\000\000\000\000\000\000\000\000\
    \062\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\000\000\000\000\000\000\000\000\
    \057\000\000\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\011\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \000\000\000\000\000\000\000\000\056\000\000\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \005\000\000\000\000\000\005\000\005\000\005\000\000\000\000\000\
    \000\000\005\000\005\000\000\000\005\000\005\000\005\000\066\000\
    \066\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
    \066\000\005\000\071\000\005\000\005\000\055\000\005\000\005\000\
    \000\000\081\000\000\000\053\000\058\000\000\000\053\000\053\000\
    \053\000\000\000\000\000\000\000\053\000\053\000\000\000\053\000\
    \053\000\053\000\067\000\067\000\067\000\067\000\067\000\067\000\
    \067\000\067\000\067\000\067\000\053\000\005\000\053\000\053\000\
    \053\000\053\000\053\000\000\000\058\000\000\000\053\000\000\000\
    \000\000\053\000\053\000\053\000\000\000\000\000\000\000\053\000\
    \053\000\000\000\053\000\053\000\053\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\005\000\000\000\005\000\000\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\000\000\000\000\
    \000\000\004\000\000\000\000\000\004\000\004\000\004\000\000\000\
    \000\000\000\000\004\000\004\000\000\000\004\000\051\000\004\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\053\000\000\000\
    \053\000\000\000\004\000\053\000\004\000\004\000\052\000\004\000\
    \004\000\000\000\000\000\000\000\005\000\000\000\000\000\005\000\
    \005\000\005\000\000\000\000\000\000\000\005\000\005\000\000\000\
    \005\000\005\000\005\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\053\000\000\000\053\000\000\000\005\000\004\000\005\000\
    \005\000\005\000\005\000\005\000\000\000\000\000\000\000\005\000\
    \000\000\000\000\005\000\005\000\049\000\000\000\000\000\000\000\
    \005\000\005\000\000\000\005\000\005\000\005\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\004\000\000\000\004\000\000\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\000\000\
    \000\000\000\000\005\000\000\000\000\000\005\000\005\000\005\000\
    \000\000\000\000\000\000\005\000\005\000\000\000\005\000\005\000\
    \005\000\000\000\000\000\000\000\000\000\000\000\000\000\050\000\
    \000\000\005\000\000\000\005\000\005\000\005\000\048\000\005\000\
    \005\000\005\000\000\000\000\000\000\000\003\000\000\000\000\000\
    \003\000\003\000\003\000\000\000\000\000\000\000\046\000\003\000\
    \000\000\003\000\003\000\003\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\005\000\000\000\005\000\000\000\003\000\005\000\
    \003\000\003\000\003\000\003\000\003\000\000\000\000\000\000\000\
    \005\000\000\000\000\000\005\000\005\000\005\000\000\000\044\000\
    \000\000\005\000\005\000\000\000\005\000\005\000\005\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\005\000\000\000\005\000\
    \000\000\005\000\003\000\041\000\005\000\043\000\005\000\005\000\
    \068\000\000\000\068\000\000\000\000\000\067\000\067\000\067\000\
    \067\000\067\000\067\000\067\000\067\000\067\000\067\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\000\000\003\000\000\000\042\000\005\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \000\000\000\000\000\000\005\000\000\000\005\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\000\000\000\000\000\000\000\000\
    \040\000\000\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \005\000\000\000\000\000\005\000\005\000\005\000\000\000\000\000\
    \000\000\005\000\005\000\000\000\005\000\005\000\005\000\067\000\
    \067\000\067\000\067\000\067\000\067\000\067\000\067\000\067\000\
    \067\000\005\000\000\000\005\000\005\000\005\000\005\000\005\000\
    \000\000\000\000\000\000\005\000\000\000\000\000\005\000\005\000\
    \005\000\000\000\000\000\000\000\005\000\005\000\000\000\005\000\
    \005\000\005\000\097\000\097\000\097\000\097\000\097\000\097\000\
    \097\000\097\000\097\000\097\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\000\000\000\000\000\000\046\000\000\000\
    \000\000\046\000\046\000\046\000\000\000\000\000\000\000\046\000\
    \046\000\000\000\046\000\046\000\046\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\005\000\000\000\005\000\000\000\046\000\
    \005\000\046\000\046\000\046\000\046\000\046\000\000\000\000\000\
    \000\000\005\000\000\000\000\000\005\000\005\000\005\000\000\000\
    \000\000\106\000\005\000\005\000\105\000\005\000\005\000\005\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\005\000\000\000\
    \005\000\000\000\005\000\046\000\005\000\005\000\005\000\005\000\
    \005\000\104\000\000\000\000\000\005\000\000\000\000\000\005\000\
    \005\000\005\000\000\000\000\000\000\000\005\000\005\000\000\000\
    \005\000\005\000\005\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\046\000\000\000\046\000\000\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\000\000\000\000\000\000\005\000\
    \000\000\000\000\005\000\005\000\005\000\000\000\000\000\000\000\
    \005\000\005\000\000\000\005\000\005\000\005\000\000\000\000\000\
    \000\000\000\000\000\000\103\000\005\000\000\000\005\000\000\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\000\000\
    \000\000\000\000\004\000\000\000\000\000\004\000\004\000\004\000\
    \000\000\000\000\000\000\004\000\004\000\000\000\004\000\004\000\
    \004\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\
    \000\000\005\000\000\000\004\000\005\000\004\000\004\000\004\000\
    \004\000\004\000\000\000\000\000\000\000\004\000\000\000\000\000\
    \004\000\004\000\004\000\000\000\000\000\000\000\004\000\004\000\
    \000\000\004\000\004\000\004\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\005\000\000\000\005\000\000\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\000\000\000\000\000\000\
    \053\000\000\000\000\000\053\000\053\000\053\000\000\000\000\000\
    \000\000\053\000\053\000\000\000\053\000\053\000\053\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\004\000\000\000\004\000\
    \000\000\053\000\004\000\053\000\053\000\053\000\053\000\053\000\
    \000\000\000\000\000\000\005\000\000\000\000\000\005\000\005\000\
    \005\000\000\000\000\000\000\000\005\000\005\000\000\000\005\000\
    \005\000\005\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \004\000\000\000\004\000\000\000\005\000\053\000\005\000\005\000\
    \005\000\005\000\005\000\000\000\000\000\000\000\000\000\011\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\102\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\000\000\053\000\000\000\053\000\000\000\000\000\
    \005\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\000\000\000\000\000\000\005\000\000\000\
    \005\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\010\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\095\000\000\000\000\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\094\000\094\000\
    \094\000\094\000\094\000\094\000\094\000\094\000\094\000\094\000\
    \000\000\000\000\000\000\110\000\000\000\000\000\109\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\098\000\098\000\098\000\
    \098\000\098\000\098\000\098\000\098\000\098\000\098\000\000\000\
    \000\000\000\000\000\000\108\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\095\000\000\000\000\000\000\000\000\000\000\000\
    \095\000\107\000\107\000\107\000\107\000\107\000\107\000\107\000\
    \107\000\107\000\107\000\000\000\095\000\000\000\000\000\000\000\
    \095\000\000\000\095\000\111\000\111\000\111\000\111\000\111\000\
    \111\000\111\000\111\000\111\000\111\000\112\000\112\000\112\000\
    \112\000\112\000\112\000\112\000\112\000\112\000\112\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\108\000\000\000\000\000\
    \000\000\000\000\000\000\108\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\108\000\
    \000\000\000\000\000\000\108\000\000\000\108\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\032\000\031\000\000\000\074\000\086\000\
    \105\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\031\000\000\000\000\000\000\000\037\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\015\000\000\000\000\000\023\000\
    \027\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \029\000\030\000\003\000\003\000\003\000\034\000\036\000\072\000\
    \003\000\003\000\073\000\003\000\003\000\003\000\059\000\059\000\
    \059\000\059\000\059\000\059\000\059\000\059\000\059\000\059\000\
    \003\000\077\000\003\000\003\000\003\000\003\000\003\000\060\000\
    \060\000\084\000\004\000\065\000\065\000\004\000\004\000\004\000\
    \082\000\085\000\091\000\004\000\004\000\095\000\004\000\004\000\
    \004\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
    \061\000\098\000\255\255\004\000\003\000\004\000\004\000\004\000\
    \004\000\004\000\109\000\109\000\110\000\005\000\255\255\255\255\
    \005\000\005\000\005\000\255\255\255\255\255\255\005\000\005\000\
    \255\255\005\000\005\000\005\000\255\255\255\255\255\255\255\255\
    \255\255\109\000\003\000\110\000\003\000\082\000\005\000\004\000\
    \005\000\005\000\005\000\005\000\005\000\255\255\255\255\255\255\
    \006\000\255\255\255\255\006\000\006\000\006\000\255\255\255\255\
    \255\255\006\000\006\000\255\255\006\000\006\000\006\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\004\000\255\255\004\000\
    \000\000\006\000\005\000\006\000\006\000\006\000\006\000\006\000\
    \008\000\255\255\008\000\008\000\008\000\008\000\008\000\008\000\
    \008\000\008\000\008\000\008\000\064\000\064\000\064\000\064\000\
    \064\000\064\000\064\000\064\000\255\255\255\255\255\255\008\000\
    \005\000\255\255\005\000\255\255\255\255\006\000\009\000\255\255\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\255\255\255\255\069\000\255\255\255\255\069\000\
    \255\255\255\255\009\000\079\000\255\255\009\000\079\000\008\000\
    \255\255\255\255\255\255\006\000\255\255\006\000\255\255\009\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \009\000\255\255\069\000\079\000\255\255\255\255\255\255\255\255\
    \079\000\079\000\009\000\079\000\255\255\009\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\009\000\
    \010\000\255\255\069\000\255\255\255\255\255\255\255\255\255\255\
    \009\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\082\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\255\255\255\255\255\255\255\255\
    \010\000\255\255\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\011\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \255\255\255\255\255\255\255\255\011\000\255\255\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \012\000\255\255\255\255\012\000\012\000\012\000\255\255\255\255\
    \255\255\012\000\012\000\255\255\012\000\012\000\012\000\066\000\
    \066\000\066\000\066\000\066\000\066\000\066\000\066\000\066\000\
    \066\000\012\000\069\000\012\000\012\000\012\000\012\000\012\000\
    \255\255\079\000\255\255\013\000\066\000\255\255\013\000\013\000\
    \013\000\255\255\255\255\255\255\013\000\013\000\255\255\013\000\
    \013\000\013\000\067\000\067\000\067\000\067\000\067\000\067\000\
    \067\000\067\000\067\000\067\000\013\000\012\000\013\000\013\000\
    \013\000\013\000\013\000\255\255\066\000\255\255\016\000\255\255\
    \255\255\016\000\016\000\016\000\255\255\255\255\255\255\016\000\
    \016\000\255\255\016\000\016\000\016\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\012\000\255\255\012\000\255\255\016\000\
    \013\000\016\000\016\000\016\000\016\000\016\000\255\255\255\255\
    \255\255\017\000\255\255\255\255\017\000\017\000\017\000\255\255\
    \255\255\255\255\017\000\017\000\255\255\017\000\017\000\017\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\013\000\255\255\
    \013\000\255\255\017\000\016\000\017\000\017\000\017\000\017\000\
    \017\000\255\255\255\255\255\255\019\000\255\255\255\255\019\000\
    \019\000\019\000\255\255\255\255\255\255\019\000\019\000\255\255\
    \019\000\019\000\019\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\016\000\255\255\016\000\255\255\019\000\017\000\019\000\
    \019\000\019\000\019\000\019\000\255\255\255\255\255\255\020\000\
    \255\255\255\255\020\000\020\000\020\000\255\255\255\255\255\255\
    \020\000\020\000\255\255\020\000\020\000\020\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\017\000\255\255\017\000\255\255\
    \020\000\019\000\020\000\020\000\020\000\020\000\020\000\255\255\
    \255\255\255\255\021\000\255\255\255\255\021\000\021\000\021\000\
    \255\255\255\255\255\255\021\000\021\000\255\255\021\000\021\000\
    \021\000\255\255\255\255\255\255\255\255\255\255\255\255\019\000\
    \255\255\019\000\255\255\021\000\020\000\021\000\021\000\021\000\
    \021\000\021\000\255\255\255\255\255\255\026\000\255\255\255\255\
    \026\000\026\000\026\000\255\255\255\255\255\255\026\000\026\000\
    \255\255\026\000\026\000\026\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\020\000\255\255\020\000\255\255\026\000\021\000\
    \026\000\026\000\026\000\026\000\026\000\255\255\255\255\255\255\
    \028\000\255\255\255\255\028\000\028\000\028\000\255\255\028\000\
    \255\255\028\000\028\000\255\255\028\000\028\000\028\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\021\000\255\255\021\000\
    \255\255\028\000\026\000\028\000\028\000\028\000\028\000\028\000\
    \058\000\255\255\058\000\255\255\255\255\058\000\058\000\058\000\
    \058\000\058\000\058\000\058\000\058\000\058\000\058\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \026\000\255\255\026\000\255\255\028\000\028\000\038\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
    \255\255\255\255\255\255\028\000\255\255\028\000\038\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
    \039\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\255\255\255\255\255\255\255\255\
    \039\000\255\255\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\040\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \040\000\040\000\040\000\040\000\040\000\040\000\040\000\040\000\
    \041\000\255\255\255\255\041\000\041\000\041\000\255\255\255\255\
    \255\255\041\000\041\000\255\255\041\000\041\000\041\000\068\000\
    \068\000\068\000\068\000\068\000\068\000\068\000\068\000\068\000\
    \068\000\041\000\255\255\041\000\041\000\041\000\041\000\041\000\
    \255\255\255\255\255\255\043\000\255\255\255\255\043\000\043\000\
    \043\000\255\255\255\255\255\255\043\000\043\000\255\255\043\000\
    \043\000\043\000\094\000\094\000\094\000\094\000\094\000\094\000\
    \094\000\094\000\094\000\094\000\043\000\041\000\043\000\043\000\
    \043\000\043\000\043\000\255\255\255\255\255\255\046\000\255\255\
    \255\255\046\000\046\000\046\000\255\255\255\255\255\255\046\000\
    \046\000\255\255\046\000\046\000\046\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\041\000\255\255\041\000\255\255\046\000\
    \043\000\046\000\046\000\046\000\046\000\046\000\255\255\255\255\
    \255\255\048\000\255\255\255\255\048\000\048\000\048\000\255\255\
    \255\255\100\000\048\000\048\000\100\000\048\000\048\000\048\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\043\000\255\255\
    \043\000\255\255\048\000\046\000\048\000\048\000\048\000\048\000\
    \048\000\100\000\255\255\255\255\049\000\255\255\255\255\049\000\
    \049\000\049\000\255\255\255\255\255\255\049\000\049\000\255\255\
    \049\000\049\000\049\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\046\000\255\255\046\000\255\255\049\000\048\000\049\000\
    \049\000\049\000\049\000\049\000\255\255\255\255\255\255\050\000\
    \255\255\255\255\050\000\050\000\050\000\255\255\255\255\255\255\
    \050\000\050\000\255\255\050\000\050\000\050\000\255\255\255\255\
    \255\255\255\255\255\255\100\000\048\000\255\255\048\000\255\255\
    \050\000\049\000\050\000\050\000\050\000\050\000\050\000\255\255\
    \255\255\255\255\051\000\255\255\255\255\051\000\051\000\051\000\
    \255\255\255\255\255\255\051\000\051\000\255\255\051\000\051\000\
    \051\000\255\255\255\255\255\255\255\255\255\255\255\255\049\000\
    \255\255\049\000\255\255\051\000\050\000\051\000\051\000\051\000\
    \051\000\051\000\255\255\255\255\255\255\052\000\255\255\255\255\
    \052\000\052\000\052\000\255\255\255\255\255\255\052\000\052\000\
    \255\255\052\000\052\000\052\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\050\000\255\255\050\000\255\255\052\000\051\000\
    \052\000\052\000\052\000\052\000\052\000\255\255\255\255\255\255\
    \053\000\255\255\255\255\053\000\053\000\053\000\255\255\255\255\
    \255\255\053\000\053\000\255\255\053\000\053\000\053\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\051\000\255\255\051\000\
    \255\255\053\000\052\000\053\000\053\000\053\000\053\000\053\000\
    \255\255\255\255\255\255\055\000\255\255\255\255\055\000\055\000\
    \055\000\255\255\255\255\255\255\055\000\055\000\255\255\055\000\
    \055\000\055\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \052\000\255\255\052\000\255\255\055\000\053\000\055\000\055\000\
    \055\000\055\000\055\000\255\255\255\255\255\255\255\255\056\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\100\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\255\255\053\000\255\255\053\000\255\255\255\255\
    \055\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\255\255\255\255\255\255\055\000\255\255\
    \055\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
    \056\000\056\000\056\000\057\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\057\000\057\000\057\000\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\057\000\057\000\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\057\000\057\000\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\057\000\
    \057\000\057\000\057\000\057\000\057\000\057\000\057\000\062\000\
    \062\000\062\000\062\000\062\000\062\000\062\000\062\000\062\000\
    \062\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \062\000\062\000\062\000\062\000\062\000\062\000\063\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\063\000\063\000\063\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\063\000\
    \063\000\063\000\063\000\063\000\063\000\090\000\255\255\255\255\
    \062\000\062\000\062\000\062\000\062\000\062\000\090\000\090\000\
    \090\000\090\000\090\000\090\000\090\000\090\000\090\000\090\000\
    \255\255\255\255\255\255\103\000\255\255\255\255\103\000\063\000\
    \063\000\063\000\063\000\063\000\063\000\097\000\097\000\097\000\
    \097\000\097\000\097\000\097\000\097\000\097\000\097\000\255\255\
    \255\255\255\255\255\255\103\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\090\000\255\255\255\255\255\255\255\255\255\255\
    \090\000\103\000\103\000\103\000\103\000\103\000\103\000\103\000\
    \103\000\103\000\103\000\255\255\090\000\255\255\255\255\255\255\
    \090\000\255\255\090\000\107\000\107\000\107\000\107\000\107\000\
    \107\000\107\000\107\000\107\000\107\000\111\000\111\000\111\000\
    \111\000\111\000\111\000\111\000\111\000\111\000\111\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\103\000\255\255\255\255\
    \255\255\255\255\255\255\103\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\103\000\
    \255\255\255\255\255\255\103\000\255\255\103\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 160 "heptagon/parsing/hept_lexer.mll"
                    ( new_line lexbuf; token lexbuf )
# 690 "heptagon/parsing/hept_lexer.ml"

  | 1 ->
# 161 "heptagon/parsing/hept_lexer.mll"
                    ( token lexbuf )
# 695 "heptagon/parsing/hept_lexer.ml"

  | 2 ->
# 162 "heptagon/parsing/hept_lexer.mll"
                    (DOT)
# 700 "heptagon/parsing/hept_lexer.ml"

  | 3 ->
# 163 "heptagon/parsing/hept_lexer.mll"
                    (LPAREN)
# 705 "heptagon/parsing/hept_lexer.ml"

  | 4 ->
# 164 "heptagon/parsing/hept_lexer.mll"
                    (LESS_LPAREN)
# 710 "heptagon/parsing/hept_lexer.ml"

  | 5 ->
# 165 "heptagon/parsing/hept_lexer.mll"
                    (RPAREN)
# 715 "heptagon/parsing/hept_lexer.ml"

  | 6 ->
# 166 "heptagon/parsing/hept_lexer.mll"
                    (RPAREN_GREATER)
# 720 "heptagon/parsing/hept_lexer.ml"

  | 7 ->
# 167 "heptagon/parsing/hept_lexer.mll"
                    ( STAR )
# 725 "heptagon/parsing/hept_lexer.ml"

  | 8 ->
# 168 "heptagon/parsing/hept_lexer.mll"
                    (LBRACE)
# 730 "heptagon/parsing/hept_lexer.ml"

  | 9 ->
# 169 "heptagon/parsing/hept_lexer.mll"
                    (RBRACE)
# 735 "heptagon/parsing/hept_lexer.ml"

  | 10 ->
# 170 "heptagon/parsing/hept_lexer.mll"
                    (COLON)
# 740 "heptagon/parsing/hept_lexer.ml"

  | 11 ->
# 171 "heptagon/parsing/hept_lexer.mll"
                    (COLONCOLON)
# 745 "heptagon/parsing/hept_lexer.ml"

  | 12 ->
# 172 "heptagon/parsing/hept_lexer.mll"
                    (SEMICOL)
# 750 "heptagon/parsing/hept_lexer.ml"

  | 13 ->
# 173 "heptagon/parsing/hept_lexer.mll"
                    (EQUAL)
# 755 "heptagon/parsing/hept_lexer.ml"

  | 14 ->
# 174 "heptagon/parsing/hept_lexer.mll"
                    (EQUALEQUAL)
# 760 "heptagon/parsing/hept_lexer.ml"

  | 15 ->
# 175 "heptagon/parsing/hept_lexer.mll"
                    (LESS_GREATER)
# 765 "heptagon/parsing/hept_lexer.ml"

  | 16 ->
# 176 "heptagon/parsing/hept_lexer.mll"
                    (AMPERSAND)
# 770 "heptagon/parsing/hept_lexer.ml"

  | 17 ->
# 177 "heptagon/parsing/hept_lexer.mll"
                    (AMPERAMPER)
# 775 "heptagon/parsing/hept_lexer.ml"

  | 18 ->
# 178 "heptagon/parsing/hept_lexer.mll"
                    (BARBAR)
# 780 "heptagon/parsing/hept_lexer.ml"

  | 19 ->
# 179 "heptagon/parsing/hept_lexer.mll"
                    (COMMA)
# 785 "heptagon/parsing/hept_lexer.ml"

  | 20 ->
# 180 "heptagon/parsing/hept_lexer.mll"
                    (ARROW)
# 790 "heptagon/parsing/hept_lexer.ml"

  | 21 ->
# 181 "heptagon/parsing/hept_lexer.mll"
                    (BAR)
# 795 "heptagon/parsing/hept_lexer.ml"

  | 22 ->
# 182 "heptagon/parsing/hept_lexer.mll"
                    (SUBTRACTIVE "-")
# 800 "heptagon/parsing/hept_lexer.ml"

  | 23 ->
# 183 "heptagon/parsing/hept_lexer.mll"
                    (SUBTRACTIVE "-.")
# 805 "heptagon/parsing/hept_lexer.ml"

  | 24 ->
# 184 "heptagon/parsing/hept_lexer.mll"
                    (POWER)
# 810 "heptagon/parsing/hept_lexer.ml"

  | 25 ->
# 185 "heptagon/parsing/hept_lexer.mll"
                    (LBRACKET)
# 815 "heptagon/parsing/hept_lexer.ml"

  | 26 ->
# 186 "heptagon/parsing/hept_lexer.mll"
                    (RBRACKET)
# 820 "heptagon/parsing/hept_lexer.ml"

  | 27 ->
# 187 "heptagon/parsing/hept_lexer.mll"
                    (LBRACKETGREATER)
# 825 "heptagon/parsing/hept_lexer.ml"

  | 28 ->
# 188 "heptagon/parsing/hept_lexer.mll"
                    (LESSRBRACKET)
# 830 "heptagon/parsing/hept_lexer.ml"

  | 29 ->
# 189 "heptagon/parsing/hept_lexer.mll"
                    (AROBASE)
# 835 "heptagon/parsing/hept_lexer.ml"

  | 30 ->
# 190 "heptagon/parsing/hept_lexer.mll"
                    (DOUBLE_DOT)
# 840 "heptagon/parsing/hept_lexer.ml"

  | 31 ->
# 191 "heptagon/parsing/hept_lexer.mll"
                    (DOUBLE_LESS)
# 845 "heptagon/parsing/hept_lexer.ml"

  | 32 ->
# 192 "heptagon/parsing/hept_lexer.mll"
                    (DOUBLE_GREATER)
# 850 "heptagon/parsing/hept_lexer.ml"

  | 33 ->
# 193 "heptagon/parsing/hept_lexer.mll"
                    (THREE_DOTS)
# 855 "heptagon/parsing/hept_lexer.ml"

  | 34 ->
let
# 194 "heptagon/parsing/hept_lexer.mll"
                                                         id
# 861 "heptagon/parsing/hept_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 195 "heptagon/parsing/hept_lexer.mll"
      (Constructor id)
# 865 "heptagon/parsing/hept_lexer.ml"

  | 35 ->
let
# 196 "heptagon/parsing/hept_lexer.mll"
                                                                 id
# 871 "heptagon/parsing/hept_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 197 "heptagon/parsing/hept_lexer.mll"
      ( let s = Lexing.lexeme lexbuf in
          begin try
      Hashtbl.find keyword_table s
          with
        Not_found -> IDENT id
    end
      )
# 881 "heptagon/parsing/hept_lexer.ml"

  | 36 ->
# 208 "heptagon/parsing/hept_lexer.mll"
      ( INT (int_of_string(Lexing.lexeme lexbuf)) )
# 886 "heptagon/parsing/hept_lexer.ml"

  | 37 ->
# 210 "heptagon/parsing/hept_lexer.mll"
      ( FLOAT (float_of_string(Lexing.lexeme lexbuf)) )
# 891 "heptagon/parsing/hept_lexer.ml"

  | 38 ->
# 212 "heptagon/parsing/hept_lexer.mll"
      ( reset_string_buffer();
        (*let string_start = lexbuf.lex_curr_p in
        string_start_loc := Location.curr lexbuf;*)
        string lexbuf;
        (*lexbuf.lex_start_p <- string_start; *)
        STRING (get_stored_string()) )
# 901 "heptagon/parsing/hept_lexer.ml"

  | 39 ->
let
# 218 "heptagon/parsing/hept_lexer.mll"
                                                                        id
# 907 "heptagon/parsing/hept_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 4) lexbuf.Lexing.lex_curr_pos in
# 219 "heptagon/parsing/hept_lexer.mll"
      (
  reset_string_buffer();
  let l1 = lexbuf.lex_curr_p in
  begin try
    pragma lexbuf
  with Lexical_error(Unterminated_comment, Loc(_, l2)) ->
    raise(Lexical_error(Unterminated_comment, Loc (l1, l2)))
  end;
  PRAGMA(id,get_stored_string())
      )
# 920 "heptagon/parsing/hept_lexer.ml"

  | 40 ->
# 230 "heptagon/parsing/hept_lexer.mll"
      ( let comment_start = lexbuf.lex_curr_p in
        comment_depth := 1;
        begin try
          comment lexbuf
        with Lexical_error(Unterminated_comment, (Loc (_, comment_end))) ->
          raise(Lexical_error(Unterminated_comment,
                              Loc (comment_start, comment_end)))
        end;
        token lexbuf )
# 933 "heptagon/parsing/hept_lexer.ml"

  | 41 ->
# 242 "heptagon/parsing/hept_lexer.mll"
      ( PREFIX(Lexing.lexeme lexbuf) )
# 938 "heptagon/parsing/hept_lexer.ml"

  | 42 ->
# 246 "heptagon/parsing/hept_lexer.mll"
      ( INFIX0(Lexing.lexeme lexbuf) )
# 943 "heptagon/parsing/hept_lexer.ml"

  | 43 ->
# 250 "heptagon/parsing/hept_lexer.mll"
      ( INFIX1(Lexing.lexeme lexbuf) )
# 948 "heptagon/parsing/hept_lexer.ml"

  | 44 ->
# 254 "heptagon/parsing/hept_lexer.mll"
      ( INFIX2(Lexing.lexeme lexbuf) )
# 953 "heptagon/parsing/hept_lexer.ml"

  | 45 ->
# 258 "heptagon/parsing/hept_lexer.mll"
      ( INFIX4(Lexing.lexeme lexbuf) )
# 958 "heptagon/parsing/hept_lexer.ml"

  | 46 ->
# 262 "heptagon/parsing/hept_lexer.mll"
      ( INFIX3(Lexing.lexeme lexbuf) )
# 963 "heptagon/parsing/hept_lexer.ml"

  | 47 ->
# 263 "heptagon/parsing/hept_lexer.mll"
                   (EOF)
# 968 "heptagon/parsing/hept_lexer.ml"

  | 48 ->
# 264 "heptagon/parsing/hept_lexer.mll"
                   (raise (Lexical_error (Illegal_character,
            Loc (Lexing.lexeme_start_p lexbuf,
            Lexing.lexeme_end_p lexbuf))))
# 975 "heptagon/parsing/hept_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and pragma lexbuf =
    __ocaml_lex_pragma_rec lexbuf 69
and __ocaml_lex_pragma_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 269 "heptagon/parsing/hept_lexer.mll"
                    ( new_line lexbuf; pragma lexbuf )
# 987 "heptagon/parsing/hept_lexer.ml"

  | 1 ->
# 271 "heptagon/parsing/hept_lexer.mll"
      ( let comment_start = lexbuf.lex_curr_p in
        comment_depth := 1;
        begin try
          comment lexbuf
        with Lexical_error(Unterminated_comment, Loc (_, comment_end)) ->
          raise(Lexical_error(Unterminated_comment,
                              Loc (comment_start, comment_end)))
        end;
        pragma lexbuf )
# 1000 "heptagon/parsing/hept_lexer.ml"

  | 2 ->
# 281 "heptagon/parsing/hept_lexer.mll"
      ( )
# 1005 "heptagon/parsing/hept_lexer.ml"

  | 3 ->
# 283 "heptagon/parsing/hept_lexer.mll"
      ( raise(Lexical_error(Unterminated_comment, Loc (dummy_pos,
                            Lexing.lexeme_start_p lexbuf))) )
# 1011 "heptagon/parsing/hept_lexer.ml"

  | 4 ->
# 287 "heptagon/parsing/hept_lexer.mll"
      ( store_string_char(Lexing.lexeme_char lexbuf 0);
  pragma lexbuf )
# 1017 "heptagon/parsing/hept_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_pragma_rec lexbuf __ocaml_lex_state

and comment lexbuf =
    __ocaml_lex_comment_rec lexbuf 79
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 291 "heptagon/parsing/hept_lexer.mll"
                    ( new_line lexbuf; comment lexbuf )
# 1029 "heptagon/parsing/hept_lexer.ml"

  | 1 ->
# 293 "heptagon/parsing/hept_lexer.mll"
      ( comment_depth := succ !comment_depth; comment lexbuf )
# 1034 "heptagon/parsing/hept_lexer.ml"

  | 2 ->
# 295 "heptagon/parsing/hept_lexer.mll"
      ( comment_depth := pred !comment_depth;
        if !comment_depth > 0 then comment lexbuf )
# 1040 "heptagon/parsing/hept_lexer.ml"

  | 3 ->
# 298 "heptagon/parsing/hept_lexer.mll"
      ( reset_string_buffer();
        let string_start = lexbuf.lex_curr_p in
        begin try
          string lexbuf
        with Lexical_error(Unterminated_string, Loc (_, string_end)) ->
          raise(Lexical_error
            (Unterminated_string, Loc (string_start, string_end)))
        end;
        comment lexbuf )
# 1053 "heptagon/parsing/hept_lexer.ml"

  | 4 ->
# 308 "heptagon/parsing/hept_lexer.mll"
      ( comment lexbuf )
# 1058 "heptagon/parsing/hept_lexer.ml"

  | 5 ->
# 310 "heptagon/parsing/hept_lexer.mll"
      ( comment lexbuf )
# 1063 "heptagon/parsing/hept_lexer.ml"

  | 6 ->
# 312 "heptagon/parsing/hept_lexer.mll"
      ( comment lexbuf )
# 1068 "heptagon/parsing/hept_lexer.ml"

  | 7 ->
# 314 "heptagon/parsing/hept_lexer.mll"
      ( comment lexbuf )
# 1073 "heptagon/parsing/hept_lexer.ml"

  | 8 ->
# 316 "heptagon/parsing/hept_lexer.mll"
      ( raise(Lexical_error(Unterminated_comment, Loc(dummy_pos,
                            Lexing.lexeme_start_p lexbuf))) )
# 1079 "heptagon/parsing/hept_lexer.ml"

  | 9 ->
# 319 "heptagon/parsing/hept_lexer.mll"
      ( comment lexbuf )
# 1084 "heptagon/parsing/hept_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

and string lexbuf =
    __ocaml_lex_string_rec lexbuf 100
and __ocaml_lex_string_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 322 "heptagon/parsing/hept_lexer.mll"
                    ( new_line lexbuf; string lexbuf )
# 1096 "heptagon/parsing/hept_lexer.ml"

  | 1 ->
# 324 "heptagon/parsing/hept_lexer.mll"
      ( () )
# 1101 "heptagon/parsing/hept_lexer.ml"

  | 2 ->
# 326 "heptagon/parsing/hept_lexer.mll"
      ( string lexbuf )
# 1106 "heptagon/parsing/hept_lexer.ml"

  | 3 ->
# 328 "heptagon/parsing/hept_lexer.mll"
      ( store_string_char(char_for_backslash(Lexing.lexeme_char lexbuf 1));
        string lexbuf )
# 1112 "heptagon/parsing/hept_lexer.ml"

  | 4 ->
# 331 "heptagon/parsing/hept_lexer.mll"
      ( store_string_char(char_for_decimal_code lexbuf 1);
         string lexbuf )
# 1118 "heptagon/parsing/hept_lexer.ml"

  | 5 ->
# 334 "heptagon/parsing/hept_lexer.mll"
      ( raise (Lexical_error(Unterminated_string, Loc (dummy_pos,
                              Lexing.lexeme_start_p lexbuf))) )
# 1124 "heptagon/parsing/hept_lexer.ml"

  | 6 ->
# 337 "heptagon/parsing/hept_lexer.mll"
      ( store_string_char(Lexing.lexeme_char lexbuf 0);
        string lexbuf )
# 1130 "heptagon/parsing/hept_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_string_rec lexbuf __ocaml_lex_state

;;

